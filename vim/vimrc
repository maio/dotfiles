set nocompatible
set wildignore=*~,*.o,*.log,*.pyc
set ignorecase smartcase
set tabstop=4
set shiftwidth=4
set expandtab
set smarttab
set autoindent
set smartindent
" set backspace=start,indent,eol
set wildmode=list:longest,full
set textwidth=79
set showbreak=
set scrolloff=10
set laststatus=2
set incsearch
set hlsearch
set ttyfast
set noerrorbells
set novisualbell
set ttimeoutlen=100
set wildmenu
set lcs=tab:»\ ,trail:•
set list

set runtimepath+=~/.vim/addons/vim-addon-manager
call vam#ActivateAddons(['Command-T','a.vim_-_Alternate_Files_quickly_.c',"FuzzyFinder","xptemplate","fugitive","taglist","unimpaired","surround","repeat"])
let g:alternateExtensions_{'pm'} = "t"
let g:alternateExtensions_{'pl'} = "t"
let g:alternateExtensions_{'t'} = "pm,pl"
let g:alternateExtensions_{'body'} = "sql"
let g:alternateExtensions_{'m'} = "h"
let g:alternateExtensions_{'h'} = "m"
let g:alternateSearchPath = 'sfr:t,..'
let g:xptemplate_key = '<Tab>'

syntax on
set hidden
filetype plugin on

let mapleader=","

cnoremap %% <C-R>=expand('%:h').'/'<cr>

map - :A<CR>

nmap p ]p
nmap P k]p
nmap <Leader>p p
nmap <Leader>P P
nmap gp `[v`]

nmap "" ci"
nmap '' ci'

nnoremap <silent> <C-l> :noh<CR><C-l>
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
nnoremap Q gqap
vnoremap Q gq

map <Leader>f :FufTaggedFile<CR>
map <Leader>j :FufJumpList<CR>
map <Leader>e :e **/
map <Leader><leader>e :e %%
map <leader><leader>t :CommandTFlush<cr>\|:CommandT %%<cr>
map <Leader>b :b 

map <Leader>w :w<CR>
imap <Leader>w <ESC>:w<CR>
map <Leader>go :only<CR>
map <Leader>gd :Gdiff<CR>
map <Leader>gs :Gstatus<CR>
map <Leader>gg :Ggrep 

nnoremap <F2> :set invpaste paste?<Enter>
imap <F2> <C-O><F2>
set pastetoggle=<F2>

imap {<CR> {<CR>}<ESC>O

imap ZZ <ESC>:wq<CR>
imap jj <ESC>j
imap kk <ESC>k
imap lll <ESC>l
imap hh <ESC>h
imap {<CR> {<CR>}<ESC>O
imap (<CR> (<CR>);<ESC>O

set errorformat=%f:%l:\ error:\ %m,%f:%l:\ warning:\ %m
set guioptions=

set background=dark
colorscheme pablo

set guifont=Monaco:h15

let Tlist_Process_File_Always = 1
set statusline=[%l,%c]\ %<%f%=%([%{Tlist_Get_Tagname_By_Line()}]%)

autocmd BufReadPost * normal `"
autocmd BufNewFile,BufRead *.t,*.it :set ft=perl
autocmd BufNewFile,BufRead Makefile :set noexpandtab
autocmd BufNewFile,BufRead *.spec,*.body,*.sql :set filetype=plsql
autocmd Filetype perl :set equalprg=perltidy
autocmd Filetype php :set equalprg=perltidy
autocmd Filetype javascript :set equalprg=js_beautify.pl\ -
autocmd BufNewFile * :%!summon-file - % 2> /dev/null

" dict completion from dict files
set spellfile=~/.vim/dict.add
set dict+=~/.vim/dict.add
set complete=.,w,b,k


" conways
set formatoptions-=cro
set wrapmargin=2

" For Perl syntax...
set include=^\\s*use\\s\\+\\zs\\k\\+\\ze
set includeexpr=substitute(v:fname,'::','/','g')
set suffixesadd=.pm
execute 'set path+=' . substitute($PERL5LIB, ':', ',', 'g')
"Adjust keyword characters for Perlish identifiers...
set iskeyword+=$
set iskeyword+=%
set iskeyword+=@
set iskeyword-=,

highlight WHITE_ON_RED ctermfg=white ctermbg=red
call matchadd('WHITE_ON_RED', '_ref[ ]*[[{(]\|_ref[ ]*-[^>]')

set modelines=0

" Visual Block mode is far more useful that Visual mode (so swap the
" commands)...
nnoremap v <C-V>
nnoremap <C-V> v

vnoremap v <C-V>
vnoremap <C-V> v

set virtualedit=block

set title "Show filename in titlebar of window
set titleold=

set autoread
set backspace=indent,eol,start
set fileformats=unix,mac,dos
set noshowmode
" set timeout timeoutlen=300 ttimeoutlen=300

au BufReadPost quickfix setlocal number
                    \ | setlocal nowrap
                    \ | setlocal modifiable
                    \ | silent! %s/^[^|]*\//.../
                    \ | setlocal nomodifiable

nmap <silent> <RIGHT> :cnext<CR>
nmap <silent> <LEFT> :cprev<CR>


"=====[ Tab handling ]======================================

set shiftround "Always indent/outdent to nearest tabstop


