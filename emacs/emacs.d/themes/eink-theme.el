;; -*- mode: emacs-lisp; mode: rainbow -*-

(deftheme eink
  "Port of eink.vim theme to emacs")

(let ((fg "#262626")
      (bg "white smoke")
      (fg-light "gray85")
      (bg-highlight "#FFF1AA"))

  (custom-theme-set-faces
   'eink
   `(font-lock-builtin-face ((t (:background ,bg :foreground ,fg))))
   `(region ((t (:background "gray85" :foreground ,fg))))
   `(yas-field-highlight-face ((t (:background "gray85" :foreground ,fg))))
   `(button ((t (:foreground ,fg :underline t))))
   `(highlight ((t nil)))
   `(cursor ((t (:background ,fg :foreground "white smoke"))))
   `(isearch ((t (:background "#e2e2e5" :foreground ,fg))))
   `(minibuffer-prompt ((t (:foreground ,fg :weight bold))))
   `(default-italic ((t (:italic t))))
   `(font-lock-comment-face ((t (:foreground ,fg :weight bold))))
   `(font-lock-comment-delimiter-face ((t (:foreground "#808080"))))
   `(font-lock-constant-face ((t (:foreground ,fg))))
   `(font-lock-doc-face ((t (:foreground ,fg))))
   `(font-lock-function-name-face ((t (:foreground ,fg))))
   `(font-lock-keyword-face ((t (:foreground ,fg))))
   `(font-lock-preprocessor-face ((t (:foreground ,fg))))
   `(font-lock-reference-face ((t (:foreground ,fg))))
   `(font-lock-string-face ((t (:foreground ,fg))))
   `(font-lock-type-face ((t (:foreground ,fg))))
   `(font-lock-variable-name-face ((t (:foreground ,fg :underline nil))))
   `(font-lock-warning-face ((t (:foreground ,fg :weight bold))))
   `(link ((t (:foreground ,fg))))
   `(org-hide ((t (:foreground ,bg))))
   `(org-level-1 ((t (:foreground "black" :weight semi-bold :height 1.3))))
   `(org-level-2 ((t (:foreground "black" :weight semi-bold :height 1.1))))
   `(org-level-3 ((t (:foreground "black" :weight semi-bold :height 1.1))))
   `(org-level-4 ((t (:foreground "black" :weight semi-bold :height 1.1))))
   `(org-level-5 ((t (:foreground "black" :weight semi-bold :height 1.1))))
   `(org-level-6 ((t (:foreground "black" :weight semi-bold :height 1.1))))
   `(org-special-keyword ((t (:foreground ,fg))))
   `(org-block ((t (:foreground ,fg))))
   `(org-quote ((t (:foreground ,fg :slant italic :inherit org-block))))
   `(org-verse ((t (:inherit org-block :slant italic))))
   `(org-todo ((t (:foreground ,fg))))
   `(org-link ((t (:foreground ,fg :underline t))))
   `(org-done ((t (:foreground ,fg-light))))
   `(org-agenda-structure ((t (:foreground ,fg :weight bold))))
   `(org-date ((t (:foreground ,fg) :underline)))
   `(org-agenda-date ((t (:foreground ,fg :height 1.2))))
   `(org-agenda-date-weekend ((t (:foreground ,fg :weight normal))))
   `(org-agenda-date-today ((t (:foreground ,fg :weight bold :height 1.4))))
   `(org-scheduled ((t (:foreground ,fg))))
   `(org-block-begin-line ((t (:foreground ,fg-light))))
   `(org-block-end-line ((t (:foreground ,fg-light))))
   `(font-latex-bold-face ((t (:foreground ,fg))))
   `(font-latex-italic-face ((t (:foreground ,fg :slant italic))))
   `(font-latex-string-face ((t (:foreground "#a9a9a9"))))
   `(font-latex-match-reference-keywords ((t (:foreground ,fg))))
   `(font-latex-match-variable-keywords ((t (:foreground ,fg))))
   `(ido-only-match ((t (:foreground ,fg))))
   `(org-sexp-date ((t (:foreground ,fg))))
   `(ido-first-match ((t (:foreground ,fg))))
   `(gnus-header-content ((t (:foreground ,fg))))
   `(gnus-header-from ((t (:foreground ,fg))))
   `(gnus-header-name ((t (:foreground ,fg))))
   `(gnus-header-subject ((t (:foreground ,fg))))
   `(slime-repl-inputed-output-face ((t (:foreground ,fg))))
   `(ido-subdir ((t (:foreground ,fg))))
   `(eshell-prompt ((t (:foreground ,fg :weight bold))))
   `(custom-variable-tag ((t (:foreground ,fg :weight bold))))
   `(modeline ((t (:background "grey90" :foreground ,fg :height 0.8))))
   `(mode-line ((t (:background "grey90" :foreground ,fg :height 0.8))))
   `(mode-line-inactive ((t (:background "grey90" :foreground "grey90" :height 0.8))))
   `(mode-line-buffer ((t (:foreground ,fg :weight bold))))
   `(mode-line-minor-mode ((t (:weight ultra-light))))
   `(default ((t (:background ,bg :foreground ,fg))))
   `(whitespace-line ((t (:background ,fg :foreground ,bg))))
   `(cperl-hash-face ((t (:foreground ,fg))))
   `(cperl-array-face ((t (:foreground ,fg))))
   `(cperl-nonoverridable-face ((t (:foreground ,fg))))
   `(idle-highlight ((t (:background ,bg-highlight))))
   `(magit-header ((t (:weight bold))))
   `(magit-item-mark ((t (:background ,bg-highlight))))
   `(magit-item-highlight ((t (:weight bold))))
   `(magit-section-highlight ((t (:inherit default))))
   `(magit-diff-context-highlight ((t (:weight bold))))
   ;; compile
   `(compilation-error ((t (:inherit error))))
   ;; flycheck
   `(flycheck-error ((t (:inherit error))))
   `(flycheck-warning ((t (:inherit warning))))
   ;; dired
   `(dired-directory ((t (:weight bold))))
   ;; helm
   `(helm-source-header ((t (:foreground ,fg :background "grey90" :weight bold))))
   `(helm-header ((t (:foreground ,fg))))
   `(helm-selection-line ((t (:inherit region :weight bold))))
   `(helm-selection ((t (:background ,bg-highlight))))
   `(helm-ff-directory ((t (:foreground ,fg :weight bold))))
   `(helm-ff-dotted-directory ((t (:foreground ,fg :weight bold))))
   `(helm-ff-symlink ((t (:foreground ,fg :slant italic))))
   `(helm-ff-executable ((t (:foreground ,fg))))
   ;; parenface
   '(parenface-paren-face ((t (:foreground "#D0D0D0"))))
   '(parenface-curly-face ((t (:foreground "#D0D0D0"))))
   '(parenface-bracket-face ((t (:foreground "#D0D0D0"))))
   ;; paren-face
   '(parenthesis ((t (:foreground "#D0D0D0"))))
   ;; js2
   `(js2-function-param ((t (:foreground ,fg))))
   `(js2-external-variable ((t (:foreground ,fg))))
   ;; show paren
   `(sp-show-pair-match-face ((t (:foreground "black" :weight bold))))
   `(sp-show-pair-mismatch-face ((t (:background "red" :foreground "black" :weight bold))))
   `(show-paren-match ((t (:foreground "black" :weight bold))))
   `(show-paren-mismatch ((t (:background "red" :foreground "black" :weight bold))))
   ;; rpm-spec-mode
   `(rpm-spec-tag-face ((t (:inherit default))))
   `(rpm-spec-package-face ((t (:inherit default))))
   `(rpm-spec-macro-face ((t (:inherit default))))
   `(rpm-spec-doc-face ((t (:inherit default))))
   `(rpm-spec-var-face ((t (:inherit default))))
   `(rpm-spec-ghost-face ((t (:inherit default))))
   `(rpm-spec-section-face ((t (:inherit default :weight bold))))))

(provide-theme 'eink)
